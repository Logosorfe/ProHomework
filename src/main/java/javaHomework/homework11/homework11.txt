Игра пасьянс :
Создать колоду карт и наполнить ее картами.(Можно карты взять из ранней домашней с картами)
Написать приложение которое будет при запуске перемешивать колоду карт.
И раскладывать ее в стопку - если в стопке две карты одной масти ложатся друг на друга, то
их убираем из стопки.
В конце написать результат и вывести карты в стопке.
Пасьянс сошелся если осталось по 1 карте каждой масти (число карт каждой масти нечетное).

2)Имеется очередь пассажиров(класс Passenger), часть из которых является клиентами 1 ого
класса, которые должны идти на посадку первыми.
Написать приложение, которое создаст 10 пассажиров, из них 3 пассажира 1 ого класса.
Отправить всех в одну очередь, разбирать очередь пока она не станет пустая.
Пассажиры 1 ого класса должны быть в очереди первыми.


3)Приложение больница : Имеется регистратура(класс) , в которую обращаются пациенты (класс),
пациентов больше 15, очередь в регистратуру может составлять 7 человек, заполнять очередь,
пока в ней есть места как только мест не хватает , остановить заполнения и начать
обслуживать пациентов в очереди, назначать им терапию(класс) и отправлять в очередь к
доктору, очередь доктора должна обслуживать сначала критичных пациентов, потом обычных.
Когда все пациенты из очереди разобраны в регистратуре, запустить новых и повторить процесс.
На каждом этапе выводить в консоль состояние пациента, (в регистратуре, у доктора, свободен)


4)Дописать свой собственный класс очередь : Интерфейс и часть реализации сделали на уроке.
Доделать методы peekTail,peekHead, isEmpty, добавить проверки на границы индексов во все
методы реализованные на уроке.
После реализации методов, выполнить сравнение собственного класса и оригинального
ArrayDeque, А именно, запустить один и тот же набор операций для обоих классов :
a) Добавить 10 элементов в начало.
b) Добавить 12 элементов в конец.
 (используйте цикл для добавления)


с) удалить 4 элемента с хвоста.
d) удалить 2 элемента с головы.


Вывести результат в консоль.
Для обоих реализаций - результат должен совпадать.


5)*Опционально, добавить итератор в собственную очередь.